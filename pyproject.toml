[tool.poetry]
name = "ot_orchestration"
version = "0.1.0"
description = "Open Targets Genetics Orchestration Pipeline"
authors = ["Szymon Szyszkowski <ss60@mib117351s.internal.sanger.ac.uk>"]
readme = "README.md"
packages = [{ include = "ot_orchestration", from = "src" }]


[tool.poetry.dependencies]
python = "^3.10, <3.11"
apache-airflow = { extras = [
  "apache-beam",
  "async",
  "celery",
  "google",
  "kubernetes",
  "openlineage",
  "postgres",
  "sftp",
], version = "^2.9.2" }
apache-airflow-providers-google = "^10.19.0"
returns = { extras = ["compatible-mypy"], version = "^0.23.0" }
pydantic = "^2.7.4"
click = "^8.1.7"
pyyaml = "^6.0.1"
google = "^3.0.0"
pendulum = "^3.0.0"
apache-airflow-providers-apache-beam = "^5.7.1"
typing-extensions = "^4.12.2"
requests = "^2.32.3"
pandas = "<2.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.9"
pytest = "^8.2.2"
mypy = "^1.10.0"
pre-commit = "^3.7.1"
coverage = "^7.5.4"
psycopg2-binary = "^2.9.9"


[tool.poetry.group.test.dependencies]
pytest-cov = "^5.0.0"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.6.1"
deptry = "^0.16.1"

[tool.poetry.scripts]
ot = "ot_orchestration.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Semi-strict mode for mypy
[tool.mypy]
disallow_any_generics = true
disallow_incomplete_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = ["src/ot_orchestration/dags/*", "src/ot_orchestration/task_groups/*"]
plugins = ["returns.contrib.mypy.returns_plugin"]

[[tool.mypy.overrides]]
module = ["google.cloud.storage", "yaml"]
ignore_missing_imports = true


[tool.ruff.lint]
ignore = [
  "E501", # line too long
  "E731", # do not assign a lambda expression, use a def

  # Ignore ignored, as the rule is now back in preview/nursery, which cannot
  # be ignored anymore without warnings.
  # https://github.com/astral-sh/ruff/issues/7491
  # "PLC1901", # Lots of false positives

  # False positives https://github.com/astral-sh/ruff/issues/5386
  "PLC0208", # Use a sequence type instead of a `set` when iterating over values
  "PLR0911", # Too many return statements ({returns} > {max_returns})
  "PLR0912", # Too many branches ({branches} > {max_branches})
  "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
  "PLR0915", # Too many statements ({statements} > {max_statements})
  "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
  "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
  "UP006",   # keep type annotation style as is
  "UP007",   # keep type annotation style as is
  # Ignored due to performance: https://github.com/charliermarsh/ruff/issues/2923
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`

]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest]
pytonpath = "src/"

[tool.pytest.ini_options]
markers = ["integration_test"]
